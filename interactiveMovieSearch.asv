function interactiveMovieSearch()
movies = listofmovies();
if isempty(movies)
    disp('No movies found in the dataset.'); 
    return; 
end 

if ~iscell(movies) || size(movies, 2) < 3
    error('Invalid movies data format. Expected a cell array with exactly three columns (movie_name, genre, director).');
end 

moviesTable = cell2table(movies(:,1:3), 'VariableNames', {'movie_name', 'genre', 'director'}); 

disp('Enter preferred genre (or press Enter to skip):'); 
userGenre = strtrim(string(input('', 's')));

disp('Enter preferred director (or press Enter to skip):'); 
userDirector = strtrim(string(input('', 's'))); 

matches = findMatchingMovies(moviesTable, userGenre, userDirector); 

if isempty(matches)
    disp('No exact matches found. Suggesting alternative recommendations...'); 
    alternativeMatches = findAlternativeRecommendations(moviesTable, userGenre, userDirector); 
    if isempty(alternativeMatches)
        disp('No alternative movies found.'); 
    else 
        disp('Alternative movie recommendations:'); 
        disp(alternativeMatches.movie_name); 
    end 
else  
 
    disp('Matching movies:');
    disp(matches.movie_name); 
end 
end 

function matches = findMatchingMovies(moviesTable, genre, director)
movieGenres = string(moviesTable.genre); 
movieDirectors = string(moviesTable.director);

genreMatches = true(height(moviesTable), 1); 
directorMatches = true(height(moviesTable), 1);

if genre ~= ""
    genreMatches = contains(movieGenres, genre, 'IgnoreCase', true); 
end 

if director ~= ""
    directorMatches = contains(movieDirectors, director, 'IgnoreCase', true);
end 

matches = moviesTable(genreMatches & directorMatches, :); 

if genre == "" && director == "" 
    matches = moviesTable([],:); 
end 
end 


function recommendations = findAlternativeRecommendations(moviesTable, genre, director) 

movieGenres = string(moviesTable.genre); 
movieDirectors = string(moviesTable.director); 

genreRecommendations = moviesTable([],:); 
directorRecommendations = moviesTable([],:); 

if genre ~= ""
    genreRecommendations = moviesTable(contains(movieGenres, genre, 'IgnoreCase', true), :); 
end 
if director ~= "" 
    directorRecommendations = moviesTable(contains(movieDirectors, director, 'IgnoreCase', true), :); 

end 
recommendations = unique([genreRecommendations; directorRecommendations], 'rows'); 
end 

function movies = listofmovies()
if exist('movies.csv', 'file') 
    rawMovies = readcell('movies.csv'); 
else 
    global movieDataset; 
    rawMovies = movieDataset; 
end 
if size(rawMovies, 2) < 3 
    error('Movie dataset is missing columns. It must have at least 3 columns: (movie_name, genre, director).'); 
end 
movies = rawMovies(:, 1:3); 
end 
